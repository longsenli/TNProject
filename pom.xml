<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com</groupId>
    <artifactId>tnpy</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>tnpy</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.6</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.40</version>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>sqljdbc4</artifactId>
            <version>4.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <!-- 邮件推送 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- pagehelper 分页插件 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>1.2.3</version>
		</dependency>
		<!-- 热部署
		     optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入   
		 -->
		<dependency>  
		    <groupId>org.springframework.boot</groupId>  
		    <artifactId>spring-boot-devtools</artifactId>  
		    <optional>true</optional>
		</dependency>

        <!--短信发送需要引入-->
        <!--<dependency>-->
            <!--<groupId>smsMainFunction1</groupId>  &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<artifactId>smsMainFunction1</artifactId>    &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它&ndash;&gt;-->
            <!--<systemPath>${basedir}/lib/sms.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>smsMainFunction2</groupId>  &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<artifactId>smsMainFunction2</artifactId>    &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它&ndash;&gt;-->
            <!--<systemPath>${basedir}/lib/activemq-all-5.9.1.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>smsMainFunction3</groupId>  &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<artifactId>smsMainFunction3</artifactId>    &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它&ndash;&gt;-->
            <!--<systemPath>${basedir}/lib/commons-logging-1.1.1.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>smsMainFunction4</groupId>  &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<artifactId>smsMainFunction4</artifactId>    &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它&ndash;&gt;-->
            <!--<systemPath>${basedir}/lib/commons-pool-1.6.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>smsMainFunction5</groupId>  &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<artifactId>smsMainFunction5</artifactId>    &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它&ndash;&gt;-->
            <!--<systemPath>${basedir}/lib/httpclient-4.3.3.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>smsMainFunction6</groupId>  &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<artifactId>smsMainFunction6</artifactId>    &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<version>1.0</version> &lt;!&ndash;自定义&ndash;&gt;-->
            <!--<scope>system</scope> &lt;!&ndash;system，类似provided，需要显式提供依赖的jar以后，Maven就不会在Repository中查找它&ndash;&gt;-->
            <!--<systemPath>${basedir}/lib/httpcore-4.3.2.jar</systemPath> &lt;!&ndash;项目根目录下的lib文件夹下&ndash;&gt;-->
        <!--</dependency>-->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.6</version>
                <configuration>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-war-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<warName>${project.artifactId}</warName>-->
                    <!--<webResources>-->
                        <!--<resource>-->
                            <!--<directory>lib/</directory>-->
                            <!--<targetPath>WEB-INF/lib</targetPath>-->
                            <!--<includes>-->
                                <!--<include>**/*.jar</include>-->
                            <!--</includes>-->
                        <!--</resource>-->
                    <!--</webResources>-->
                <!--</configuration>-->
            <!--</plugin>-->

        </plugins>
    </build>

</project>
