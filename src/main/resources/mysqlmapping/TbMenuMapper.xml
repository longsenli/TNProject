<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tnpy.mes.mapper.mysql.TbMenuMapper">
  <resultMap id="BaseResultMap" type="com.tnpy.mes.model.mysql.TbMenu">
    <id column="menu_id" jdbcType="INTEGER" property="menuId" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result property="parentName"     column="parent_name"    />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="menu_type" jdbcType="CHAR" property="menuType" />
    <result column="visible" jdbcType="CHAR" property="visible" />
    <result column="perms" jdbcType="VARCHAR" property="perms" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    menu_id, menu_name, parent_id, order_num, url, menu_type, visible, perms, icon, create_by, 
    create_time, update_by, update_time, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    menu_id, menu_name, parent_id, order_num, url, menu_type, visible, perms, icon, create_by, create_time,
   (SELECT menu_name FROM tb_menu WHERE menu_id = t.parent_id) parent
    from tb_menu t
    where menu_id = #{menuId,jdbcType=INTEGER}
  </select>
   <select id="listMenus" resultMap="BaseResultMap">
    select menu_id, menu_name, parent_id, order_num, url, menu_type, visible, perms, icon, create_by, create_time,
   (SELECT menu_name FROM tb_menu WHERE menu_id = t.parent_id) parent_name from tb_menu t 
  </select>
  <select id="listFolders" resultMap="BaseResultMap">
   select menu_id, menu_name, parent_id, order_num, url, menu_type, visible, perms, icon, create_by, create_time from tb_menu where menu_type = 'M' 
  </select>
  <select id="getAllParentMenuList" resultMap="BaseResultMap">
	SELECT menu_id, menu_name, parent_id, order_num, url, menu_type, visible, perms, icon, create_by, create_time
	 from tb_menu WHERE parent_id=0 and visible=0 ORDER BY order_num ASC
	</select>
	<select id="getSubMenuByParentId" parameterType="long" resultMap="BaseResultMap">
		SELECT menu_id, menu_name, parent_id, order_num, url, menu_type, visible, perms, icon, create_by, create_time
		 from tb_menu WHERE parent_id=#{parent_id} and visible=0 ORDER BY order_num ASC
	</select>
	<select id="selectMenuTree" parameterType="Long" resultType="String">
		select m.menu_id
		from tb_menu m
			left join tb_role_menu rm on m.menu_id = rm.menu_id
		where rm.role_id = #{roleId}
		order by m.parent_id, m.order_num
	</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_menu
    where menu_id = #{menuId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tnpy.mes.model.mysql.TbMenu" useGeneratedKeys="true">
    insert into tb_menu ( menu_name, parent_id, 
      <!-- order_num,  -->
      url, menu_type, 
      visible, perms, icon, 
      create_by, create_time, update_by, 
      update_time, remark)
    values ( #{menuName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      <!-- #{orderNum,jdbcType=INTEGER}, -->
      #{url,jdbcType=VARCHAR}, #{menuType,jdbcType=CHAR}, 
      #{visible,jdbcType=CHAR}, #{perms,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tnpy.mes.model.mysql.TbMenu">
    insert into tb_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="menuName != null">
        menu_name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
     <!-- <if test="orderNum != null">
        order_num,
      </if> --> 
      <if test="url != null">
        url,
      </if>
      <if test="menuType != null">
        menu_type,
      </if>
      <if test="visible != null">
        visible,
      </if>
      <if test="perms != null">
        perms,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <!-- <if test="orderNum != null">
        #{orderNum,jdbcType=INTEGER},
      </if> -->
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null">
        #{menuType,jdbcType=CHAR},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=CHAR},
      </if>
      <if test="perms != null">
        #{perms,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tnpy.mes.model.mysql.TbMenu">
    update tb_menu
    <set>
      <if test="menuName != null">
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null">
        menu_type = #{menuType,jdbcType=CHAR},
      </if>
      <if test="visible != null">
        visible = #{visible,jdbcType=CHAR},
      </if>
      <if test="perms != null">
        perms = #{perms,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tnpy.mes.model.mysql.TbMenu">
    update tb_menu
    set menu_name = #{menuName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      <!-- order_num = #{orderNum,jdbcType=INTEGER}, -->
      url = #{url,jdbcType=VARCHAR},
      menu_type = #{menuType,jdbcType=CHAR},
      visible = #{visible,jdbcType=CHAR},
      perms = #{perms,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where menu_id = #{menuId,jdbcType=INTEGER}
  </update>
</mapper>