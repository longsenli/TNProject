<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tnpy.mes.mapper.mysql.PileBatteryRecordMapper">
  <resultMap id="BaseResultMap" type="com.tnpy.mes.model.mysql.PileBatteryRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="plantID" jdbcType="VARCHAR" property="plantid" />
    <result column="processID" jdbcType="VARCHAR" property="processid" />
    <result column="lineID" jdbcType="VARCHAR" property="lineid" />
    <result column="productionNumber" jdbcType="REAL" property="productionnumber" />
    <result column="materialID" jdbcType="VARCHAR" property="materialid" />
    <result column="materialName" jdbcType="VARCHAR" property="materialname" />
    <result column="pileStaffID" jdbcType="VARCHAR" property="pilestaffid" />
    <result column="pileStaffName" jdbcType="VARCHAR" property="pilestaffname" />
    <result column="pileTime" jdbcType="TIMESTAMP" property="piletime" />
    <result column="batteryDate" jdbcType="DATE" property="batterydate" />
    <result column="materialType" jdbcType="VARCHAR" property="materialtype" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="tidyRecordID" jdbcType="VARCHAR" property="tidyrecordid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, plantID, processID, lineID, productionNumber, materialID, materialName, pileStaffID, 
    pileStaffName, pileTime, batteryDate, materialType, location, status, remark, tidyRecordID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_pilebatteryrecord
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_pilebatteryrecord
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tnpy.mes.model.mysql.PileBatteryRecord">
    insert into tb_pilebatteryrecord (id, plantID, processID, 
      lineID, productionNumber, materialID, 
      materialName, pileStaffID, pileStaffName, 
      pileTime, batteryDate, materialType, 
      location, status, remark, 
      tidyRecordID)
    values (#{id,jdbcType=VARCHAR}, #{plantid,jdbcType=VARCHAR}, #{processid,jdbcType=VARCHAR}, 
      #{lineid,jdbcType=VARCHAR}, #{productionnumber,jdbcType=REAL}, #{materialid,jdbcType=VARCHAR}, 
      #{materialname,jdbcType=VARCHAR}, #{pilestaffid,jdbcType=VARCHAR}, #{pilestaffname,jdbcType=VARCHAR}, 
      #{piletime,jdbcType=TIMESTAMP}, #{batterydate,jdbcType=DATE}, #{materialtype,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{tidyrecordid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tnpy.mes.model.mysql.PileBatteryRecord">
    insert into tb_pilebatteryrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="plantid != null">
        plantID,
      </if>
      <if test="processid != null">
        processID,
      </if>
      <if test="lineid != null">
        lineID,
      </if>
      <if test="productionnumber != null">
        productionNumber,
      </if>
      <if test="materialid != null">
        materialID,
      </if>
      <if test="materialname != null">
        materialName,
      </if>
      <if test="pilestaffid != null">
        pileStaffID,
      </if>
      <if test="pilestaffname != null">
        pileStaffName,
      </if>
      <if test="piletime != null">
        pileTime,
      </if>
      <if test="batterydate != null">
        batteryDate,
      </if>
      <if test="materialtype != null">
        materialType,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="tidyrecordid != null">
        tidyRecordID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="plantid != null">
        #{plantid,jdbcType=VARCHAR},
      </if>
      <if test="processid != null">
        #{processid,jdbcType=VARCHAR},
      </if>
      <if test="lineid != null">
        #{lineid,jdbcType=VARCHAR},
      </if>
      <if test="productionnumber != null">
        #{productionnumber,jdbcType=REAL},
      </if>
      <if test="materialid != null">
        #{materialid,jdbcType=VARCHAR},
      </if>
      <if test="materialname != null">
        #{materialname,jdbcType=VARCHAR},
      </if>
      <if test="pilestaffid != null">
        #{pilestaffid,jdbcType=VARCHAR},
      </if>
      <if test="pilestaffname != null">
        #{pilestaffname,jdbcType=VARCHAR},
      </if>
      <if test="piletime != null">
        #{piletime,jdbcType=TIMESTAMP},
      </if>
      <if test="batterydate != null">
        #{batterydate,jdbcType=DATE},
      </if>
      <if test="materialtype != null">
        #{materialtype,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tidyrecordid != null">
        #{tidyrecordid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tnpy.mes.model.mysql.PileBatteryRecord">
    update tb_pilebatteryrecord
    <set>
      <if test="plantid != null">
        plantID = #{plantid,jdbcType=VARCHAR},
      </if>
      <if test="processid != null">
        processID = #{processid,jdbcType=VARCHAR},
      </if>
      <if test="lineid != null">
        lineID = #{lineid,jdbcType=VARCHAR},
      </if>
      <if test="productionnumber != null">
        productionNumber = #{productionnumber,jdbcType=REAL},
      </if>
      <if test="materialid != null">
        materialID = #{materialid,jdbcType=VARCHAR},
      </if>
      <if test="materialname != null">
        materialName = #{materialname,jdbcType=VARCHAR},
      </if>
      <if test="pilestaffid != null">
        pileStaffID = #{pilestaffid,jdbcType=VARCHAR},
      </if>
      <if test="pilestaffname != null">
        pileStaffName = #{pilestaffname,jdbcType=VARCHAR},
      </if>
      <if test="piletime != null">
        pileTime = #{piletime,jdbcType=TIMESTAMP},
      </if>
      <if test="batterydate != null">
        batteryDate = #{batterydate,jdbcType=DATE},
      </if>
      <if test="materialtype != null">
        materialType = #{materialtype,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="tidyrecordid != null">
        tidyRecordID = #{tidyrecordid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tnpy.mes.model.mysql.PileBatteryRecord">
    update tb_pilebatteryrecord
    set plantID = #{plantid,jdbcType=VARCHAR},
      processID = #{processid,jdbcType=VARCHAR},
      lineID = #{lineid,jdbcType=VARCHAR},
      productionNumber = #{productionnumber,jdbcType=REAL},
      materialID = #{materialid,jdbcType=VARCHAR},
      materialName = #{materialname,jdbcType=VARCHAR},
      pileStaffID = #{pilestaffid,jdbcType=VARCHAR},
      pileStaffName = #{pilestaffname,jdbcType=VARCHAR},
      pileTime = #{piletime,jdbcType=TIMESTAMP},
      batteryDate = #{batterydate,jdbcType=DATE},
      materialType = #{materialtype,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      tidyRecordID = #{tidyrecordid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>