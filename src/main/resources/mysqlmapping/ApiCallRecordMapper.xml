<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tnpy.mes.mapper.mysql.ApiCallRecordMapper">
  <resultMap id="BaseResultMap" type="com.tnpy.mes.model.mysql.ApiCallRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="userID" jdbcType="VARCHAR" property="userid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="callTime" jdbcType="TIMESTAMP" property="calltime" />
    <result column="loginIP" jdbcType="VARCHAR" property="loginip" />
    <result column="apiRoute" jdbcType="VARCHAR" property="apiroute" />
    <result column="params" jdbcType="VARCHAR" property="params" />
    <result column="responseStatus" jdbcType="VARCHAR" property="responsestatus" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userID, userName, callTime, loginIP, apiRoute, params, responseStatus, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_apicallrecord
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_apicallrecord
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tnpy.mes.model.mysql.ApiCallRecord">
    insert into tb_apicallrecord (id, userID, userName, 
      callTime, loginIP, apiRoute, 
      params, responseStatus, status
      )
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{calltime,jdbcType=TIMESTAMP}, #{loginip,jdbcType=VARCHAR}, #{apiroute,jdbcType=VARCHAR}, 
      #{params,jdbcType=VARCHAR}, #{responsestatus,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tnpy.mes.model.mysql.ApiCallRecord">
    insert into tb_apicallrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="calltime != null">
        callTime,
      </if>
      <if test="loginip != null">
        loginIP,
      </if>
      <if test="apiroute != null">
        apiRoute,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="responsestatus != null">
        responseStatus,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="calltime != null">
        #{calltime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginip != null">
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="apiroute != null">
        #{apiroute,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="responsestatus != null">
        #{responsestatus,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tnpy.mes.model.mysql.ApiCallRecord">
    update tb_apicallrecord
    <set>
      <if test="userid != null">
        userID = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="calltime != null">
        callTime = #{calltime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginip != null">
        loginIP = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="apiroute != null">
        apiRoute = #{apiroute,jdbcType=VARCHAR},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="responsestatus != null">
        responseStatus = #{responsestatus,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tnpy.mes.model.mysql.ApiCallRecord">
    update tb_apicallrecord
    set userID = #{userid,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      callTime = #{calltime,jdbcType=TIMESTAMP},
      loginIP = #{loginip,jdbcType=VARCHAR},
      apiRoute = #{apiroute,jdbcType=VARCHAR},
      params = #{params,jdbcType=VARCHAR},
      responseStatus = #{responsestatus,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>