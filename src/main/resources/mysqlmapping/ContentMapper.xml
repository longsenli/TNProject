<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tnpy.mes.mapper.mysql.ContentMapper">
  <resultMap id="BaseResultMap" type="com.tnpy.mes.model.mysql.Content">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="context" jdbcType="VARCHAR" property="context" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="feedback" jdbcType="VARCHAR" property="feedback" />
    <result column="feedbackor" jdbcType="VARCHAR" property="feedbackor" />
    <result column="feedbackTime" jdbcType="TIMESTAMP" property="feedbacktime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, title, context, creator, createTime, feedback, feedbackor, feedbackTime, 
    status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_content
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByFilter" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_content
    ${filter}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_content
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tnpy.mes.model.mysql.Content">
    insert into tb_content (id, type, title, 
      context, creator, createTime, 
      feedback, feedbackor, feedbackTime, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{context,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{feedback,jdbcType=VARCHAR}, #{feedbackor,jdbcType=VARCHAR}, #{feedbacktime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tnpy.mes.model.mysql.Content">
    insert into tb_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="context != null">
        context,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="feedback != null">
        feedback,
      </if>
      <if test="feedbackor != null">
        feedbackor,
      </if>
      <if test="feedbacktime != null">
        feedbackTime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="feedback != null">
        #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="feedbackor != null">
        #{feedbackor,jdbcType=VARCHAR},
      </if>
      <if test="feedbacktime != null">
        #{feedbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tnpy.mes.model.mysql.Content">
    update tb_content
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="feedback != null">
        feedback = #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="feedbackor != null">
        feedbackor = #{feedbackor,jdbcType=VARCHAR},
      </if>
      <if test="feedbacktime != null">
        feedbackTime = #{feedbacktime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tnpy.mes.model.mysql.Content">
    update tb_content
    set type = #{type,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      context = #{context,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      feedback = #{feedback,jdbcType=VARCHAR},
      feedbackor = #{feedbackor,jdbcType=VARCHAR},
      feedbackTime = #{feedbacktime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>